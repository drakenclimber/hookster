#****************************************************************************
# &copy;
# Copyright 2014-2015 Tom Hromatka
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#****************************************************************************

#****************************************************************************
# Hookster configuration file
#
# Helpful hints:
#    * Comments must start with ";", "#", or "REM"
#    * Comments must be at the start of a line
#    * Options are case-insensitive.  (Python config parser is meant to be
#      similar to Windows *.ini files.)
#
#****************************************************************************

#****************************************************************************
# Hookster settings
#****************************************************************************
[Hookster]

# checks_enabled - comma-separated list of checks to run against this repository
#
# You can write your own custom checks and add them to this list.  Hookster
# will dynamically load any classes specified in this list.
#
# Your check must inherit from abstractCheck.py and implement its abstract
# methods.
#
checks_enabled=CheckCopyright,CheckRejectTabs

# actions_on_success - comma-separated list of actions to perform when all
#                      checks are successful
#
# You can write your own custom actions and add them to this list.  Hookster
# will dynamically load any classes specified in this list.
#
# Your action must inherit from abstractAction.py and implement its abstract
# methods.
#
actions_on_success=ActionEmail

# actions_on_failure - comma-separated list of actions to perform when a check
#                      fails
#
# You can write your own custom actions and add them to this list.  Hookster
# will dynamically load any classes specified in this list.
#
# Your action must inherit from abstractAction.py and implement its abstract
# methods.
#
actions_on_failure=ActionEmail

# time_format
#
# Valid options:
#    Any valid time.strftime() format.  For more details, see:
#    https://docs.python.org/2/library/time.html
#
time_format="%Y-%m-%d %H:%M:%S"

# repo_name - name of the SCM repository
#
repo_name=testing

# scm_browser_url - website that can be used to browse your repository (e.g.
#                   gitweb, viewvc, et al.)
#
scm_browser_url="https://zaphod/git/?p=%s.git;a=commit;h=%s"
scm_browser_url_params=repo,commit_id

#****************************************************************************
# Log settings
#****************************************************************************
[Log]

# destination - where to log
#
# Valid options (comma separated):
#   Blank
#   File: log to a file.  If specified, "File=" must be populated
#   Screen: log to the screen
#
# e.g.
# destination =
# destination = File,Screen
# destination = File
# destination = Screen
#
destination=File,Screen


# level - log level to record.  All logs at this level (or more severe) will
#         be logged.  "Chattier" levels will be discarded.
#
# Valid options:
#   Blank - the default log level will be utilized
#   1 - Error.  Log only errors
#   2 - Debug.  Log error and debug
#   3 - Trace.  Log error, debug, and trace
#
# WARNING - use the integer values (not the descriptive text!)
#
level=3


# file - destination file to log to.  Only utilized if "File" is specified in
#        "Destination=" option.
#
# Uses the string builder class.  See the section titled [StringBuilder] for all of
# its options
#
file="/tmp/%s %s.log"
file_params=branch_basename,date_time

#****************************************************************************
# String Builder settings
#****************************************************************************
[StringBuilder]
#
# The StringBuilder class can be used to generate custom strings
#
# Supported keywords
#
#   author:          the author of this commit
#   branch_name:     the SCM branch of this commit
#   branch_basename: the basename of the branch (e.g. given branch a/b/c, the basename woudld be c)
#   commit_id:       this commit's ID/hash
#   date_time:       the current date/time (in the format specified in the time_format option)
#   file_list:       a list of files changed in this commit
#   new_rev:         same as commit id
#   old_rev:         previous commit ID/hash
#   patch:           a patch of the changes in this commit.  (Currently unsupported)
#   repo:            repository name
#   scm_browser_url: URL to SCM browser (e.g. gitweb, vcviewer, et al.)
#

#****************************************************************************
# Checks settings
#****************************************************************************
[CheckRejectTabs]
extensions=*.py,*.java,*.c,*.h

[CheckCopyright]
extensions=*.py,*.c,*.h

# first_line - first line (inclusive) that copyright can occur on
#
# Note - python starts arrays at zero, so line 1 would be "0"
#
first_line=2

# last_line - the last line (inclusive) that the copyright string can be located
#
# Note - use "-1" for the end of file (i.e. no last line limit)
# Note - python starts arrays at zero, so line 1 would be "0"
#
last_line=-1

# copyright_owner - the copyright owner of the file
#
# e.g. copyright 2015 Acme Anvil and TNT Corporation
#      would be
#      copyright_owner=Acme Anvil and TNT Corporation
#
copyright_owner=Tom Hromatka

#****************************************************************************
# Actions settings
#****************************************************************************
[ActionEmail]

# sender - sender of the failure/success email
#
sender=online.hromatka@gmail.com

# send_to_on_success - comma-separated list of email addresses to notify upon success
#
# Note - ActionEmail must be in the actions_on_success option for this option to
#        be used
#
send_to_on_success=tom.hromatka@gmail.com,spam.hromatka@gmail.com

# send_to_on_failure - comma-separated list of email addresses to notify upon failure
#
# Note - ActionEmail must be in the actions_on_failure option for this option to
#        be used
#
send_to_on_failure=tom.hromatka@gmail.com,spam.hromatka@gmail.com

# failure_subject - subject line of the email
# failure_subject_params - optional parameters to customize the subject
#
# Uses the string builder class.  See the section titled [StringBuilder] for all of
# its options
#
failure_subject="[COMMIT FAILURE] Commit %s by %s"
failure_subject_params=commit_id,author

# success_subject - subject line of the email
# success_subject_params - optional parameters to customize the subject
#
# Uses the string builder class.  See the section titled [StringBuilder] for all of
# its options
#
success_subject="[COMMIT SUCCESS] Commit %s by %s"
success_subject_params=commit_id,author

# failure_body - body of the email
# failure_body_params - optional parameters to customize the body of the email
#
# Uses the string builder class.  See the section titled [StringBuilder] for all of
# its options
#
failure_body="Branch name:\t\t%s\nPrevious revision:\t%s\nNew revision:\t\t%s\n\nChanged files:\n%s"
failure_body_params=branch_name,old_rev,new_rev,file_list

# success_body - body of the email
# success_body_params - optional parameters to customize the body of the email
#
# Uses the string builder class.  See the section titled [StringBuilder] for all of
# its options
#
success_body="Branch name:\t\t%s\nPrevious revision:\t%s\nNew revision:\t\t<a href=%s>%s</a>\n\nChanged files:\n%s"
success_body_params=branch_name,old_rev,scm_browser_url,new_rev,file_list
